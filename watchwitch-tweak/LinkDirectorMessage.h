/*
* This header is generated by classdump-dyld 1.0
* on Friday, May 5, 2023 at 3:05:03 PM Central European Summer Time
* Operating System: Version 14.8 (Build 18H17)
* Image Source: /usr/libexec/terminusd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NRLink, NSUUID;

@interface NRLinkDirectorMessage : NSObject {

	unsigned char _messageVersion;
	unsigned short _messageHeaderSize;
	unsigned short _payloadLength;
	unsigned _messageLen;
	NRLink* _preferredLink;
	NSUUID* _nrUUID;
	char* _messageBufferPtr;
	unsigned long long _identifier;

}

@property (nonatomic,retain) NSUUID * nrUUID;                               //@synthesize nrUUID=_nrUUID - In the implementation block
@property (assign,nonatomic) char* messageBufferPtr;                        //@synthesize messageBufferPtr=_messageBufferPtr - In the implementation block
@property (assign,nonatomic) unsigned char messageVersion;                  //@synthesize messageVersion=_messageVersion - In the implementation block
@property (assign,nonatomic) unsigned short messageHeaderSize;              //@synthesize messageHeaderSize=_messageHeaderSize - In the implementation block
@property (assign,nonatomic) unsigned messageLen;                           //@synthesize messageLen=_messageLen - In the implementation block
@property (assign,nonatomic) unsigned long long identifier;                 //@synthesize identifier=_identifier - In the implementation block
@property (assign,nonatomic) unsigned short payloadLength;                  //@synthesize payloadLength=_payloadLength - In the implementation block
@property (nonatomic,retain) NRLink * preferredLink;                        //@synthesize preferredLink=_preferredLink - In the implementation block
+(id)createMessageWithData:(id)arg1 nrUUID:(id)arg2 ;
+(id)testData;
+(id)createSubDataArrayFromData:(id)arg1 ;
+(id)createArrayFromSubDataArray:(id)arg1 ;
+(id)createTestEndpointIPv4;
+(id)createTestEndpointIPv6;
+(BOOL)testMessage:(id)arg1 ;
+(void)testCleanupForNRUUID:(id)arg1 ;
+(BOOL)testForNRUUID:(id)arg1 ;
-(id)initDirectorMessageWithNRUUID:(id)arg1 messageLen:(unsigned)arg2 messageVersion:(unsigned char)arg3 ;
-(void)writeMessageVersionToSendBuffer:(unsigned char)arg1 ;
-(void)writeMessageOptionsToSendBuffer:(const char*)arg1 len:(unsigned char)arg2 ;
-(void)writeMessageIdentifierNBOToSendBuffer:(const char*)arg1 len:(unsigned)arg2 ;
-(void)writeMessagePayloadLengthNBOToSendBuffer:(const char*)arg1 len:(unsigned short)arg2 ;
-(void)setPayloadLength:(unsigned short)arg1 ;
-(id)initOutgoingDirectorMessageWithNRUUIDInner:(id)arg1 messageVersion:(unsigned char)arg2 ;
-(id)initOutgoingDirectorMessageWithNRUUID:(id)arg1 ;
-(void)dealloc;
-(unsigned long long)identifier;
-(id)description;
-(void)addType:(unsigned char)arg1 data:(id)arg2 ;
-(void)addType:(unsigned char)arg1 boolValue:(BOOL)arg2 ;
-(void)addType:(unsigned char)arg1 ;
-(void)addUpdateWiFiAddressEndpoint:(id)arg1 portHBO:(unsigned short)arg2 ;
-(void)addDeviceLinkState:(id)arg1 ;
-(id)copyDeviceLinkState;
-(id)copyAllDataForType:(unsigned char)arg1 ;
-(BOOL)hasType:(unsigned char)arg1 ;
-(id)copyFirstBoolForType:(unsigned char)arg1 ;
-(id)copyUpdateWiFiAddressEndpointsForInterfaceIndex:(unsigned)arg1 ;
-(id)copyFirstDataForType:(unsigned char)arg1 ;
-(id)copySendBuffer;
-(BOOL)send;
-(NRLink *)preferredLink;
-(void)setPreferredLink:(NRLink *)arg1 ;
-(NSUUID *)nrUUID;
-(void)setNrUUID:(NSUUID *)arg1 ;
-(char*)messageBufferPtr;
-(void)setMessageBufferPtr:(char*)arg1 ;
-(unsigned char)messageVersion;
-(void)setMessageVersion:(unsigned char)arg1 ;
-(unsigned short)messageHeaderSize;
-(void)setMessageHeaderSize:(unsigned short)arg1 ;
-(unsigned)messageLen;
-(void)setMessageLen:(unsigned)arg1 ;
-(void)setIdentifier:(unsigned long long)arg1 ;
-(unsigned short)payloadLength;
@end
