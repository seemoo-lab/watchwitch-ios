@interface NRLinkDirector 
@property (nonatomic,retain) NSMutableDictionary * conductors; 
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
+(id)copySharedLinkDirector;
-(id)initDirector;
-(void)startDirector;
-(void)restartDirector;
-(void)cancelDirector;
-(void)checkStarted;
-(id)name;
-(void)setupManagers;
-(void)refreshCompanionProxyAgent;
-(void)removeCatchAllInterface;
-(void)createCatchAllInterface;
-(void)setupCatchAllInterfaceIfApplicable;
-(void)unregisterProxyAgent;
-(void)updateProxyAgentForNRUUID:(id)arg1 ;
-(id)copyStatusString;
-(void)reportEvent:(int)arg1 details:(id)arg2 ;
-(void)reportEvent:(int)arg1 detailsFormat:(id)arg2 ;
-(void)reportEvent:(int)arg1 ;
-(void)handleAlwaysOnWiFiQueryComplete;
-(void)checkEnabledDevices;
-(void)setLinkRequirementsForNRUUID:(id)arg1 inputBPS:(unsigned)arg2 outputBPS:(unsigned)arg3 packetsPS:(unsigned)arg4 ;
-(id)copyPrimaryLinkForNRUUID:(id)arg1 ;
-(id)copyDeviceMonitorStatusForNRUUID:(id)arg1 replyDict:(id)arg2 ;
-(unsigned)cancelAllLinks;
-(void)enableCloudLink:(BOOL)arg1 ;
-(void)setFixedInterfaceModeWithEnabled:(BOOL)arg1 interfaceName:(id)arg2 peerAddress:(id)arg3 ;
-(void)setWatchRoleSwitchAllowedForTesting:(BOOL)arg1 ;
-(void)setSimulateAltAccountTesting:(BOOL)arg1 ;
-(void)setWiFiRangeExtensionAllowedForTesting:(BOOL)arg1 ;
-(void)setPreferWiFiAllowedForTesting:(BOOL)arg1 ;
-(void)linkIsAvailable:(id)arg1 ;
-(void)linkIsReady:(id)arg1 ;
-(void)linkIsSuspended:(id)arg1 ;
-(void)linkIsUnavailable:(id)arg1 ;
-(void)linkDidReceiveData:(id)arg1 data:(id)arg2 ;
-(void)linkPeerIsAsleep:(id)arg1 isAsleep:(BOOL)arg2 ;
-(void)pipeDidConnectForNRUUID:(BOOL)arg1 nrUUID:(id)arg2 ;
-(void)deviceHasPhoneCallRelayRequest:(BOOL)arg1 ;
-(void)apsIsConnected:(BOOL)arg1 ;
-(void)addDeviceMonitorConnection:(id)arg1 nrUUID:(id)arg2 ;
-(void)removeDeviceMonitorConnection:(id)arg1 ;
-(void)addDeviceSetupInProgressConnection:(id)arg1 nrUUID:(id)arg2 ;
-(void)removeDeviceSetupInProgressConnection:(id)arg1 ;
-(void)setLinkPreferences:(id)arg1 forConnection:(id)arg2 nrUUID:(id)arg3 ;
-(void)setPolicyTrafficClasses:(id)arg1 forConnection:(id)arg2 nrUUID:(id)arg3 ;
-(void)removeDevicePreferencesManagerConnection:(id)arg1 ;
-(void)updateDeviceMonitorConnectionsForNRUUID:(id)arg1 ;
-(BOOL)preferWiFiRequestAvailable;
-(BOOL)preferWiFiRequestUnavailable;
-(void)setMPKLLoggingWithEnabled:(BOOL)arg1 ;
-(void)measureBTLatencyForNRUUID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)addTerminusPrefixDropPolicy;
-(void)removeTerminusPrefixDropPolicy;
-(void)startSocksServer;
-(void)cancelSocksServer;
@end